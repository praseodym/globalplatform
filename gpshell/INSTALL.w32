Pre-requisite:
--------------

This will be a some work ...

1.	You need a Microsoft C/C++-Compiler including the libraries, includes and
    build tools. You may use the compiler included in Visual Studio 6.0,
    Microsoft Visual Studio .NET 2003, Visual Studio 2005, Visual Studio 2008 etc.
    If you have Cygwin installed you can also also use it. See the file
    INSTALL for the compilation.
    Obey, that you will have problems with the portability on older systems if you
    use newer compiler suites, i.e. on systems without a installed
    .NET framework some libraries linked against are missing (e.g. there is
    a problem with newer versions of msvcrt, e.g. msvcr80 and msvcr90 which are
    not available under previous versions of Windows).

	For a free way to build you need:

	Microsoft® Visual C++ 2008 Express Edition
	http://www.microsoft.com/express/vc/

    to get a C/C++ compiler suite.

    You also need the Platform SDK to get the libraries for linking.

    Download the Windows Server 2003 R2 Platform SDK.

    http://www.microsoft.com/downloads/details.aspx?FamilyID=0baf2b35-c656-4969-ace8-e4c0c0716adb&DisplayLang=en

    The SDK integrates automatically into Visual C++ 2008 Express.

2.  Download the Windows Driver Kit (WDK).

    http://www.microsoft.com/downloads/details.aspx?displaylang=en&FamilyID=36a2630f-5d56-43b5-b996-7633f2ec14ff

    The WDK is needed to build a Windows platform independent version without getting into conflict with different
    Windows msvcrt DLL versions.

    See http://kobyk.wordpress.com/2007/07/20/dynamically-linking-with-msvcrtdll-using-visual-c-2005/

Installation:
-------------

a) nmake compilation
--------------------

1.	Set the environment (This are include files and libraries and programms of the building environment)
	for compilation and open a command prompt. If you have Microsoft Visual Studio 6.0
	or .NET 2003 (or Visual Studio 2005) there is a file vcvars32.bat which does this for you
	and opens a command prompt. There could also be a link in the Start menu of Windows.
	If you have installed Microsoft Visual C++ 2005 Express Edition and the
	Windows Server 2003 R2 Platform SDK then change into the Platform SDK directory, open a
	console and run the SetEnv.Cmd (or use a link for your target environment in the Start menu of Windows).
	Now change into the Microsoft Visual C++ 2005 Express Edition VC\bin subdirectory and run vcvars32.bat.
	Now you should have a environment with the necessary tools, include and library directories.

2. 	Change into this directory.

3. 	Run nmake -f Makefile.mak to build a release version without debugging information.
	or run nmake -f Makefile.mak DEBUG= to build a debug version with debugging information.
	There are some arguments which are displayed in the beginning of the makefile. You
	can change them if you specify them on the command line or in the makefile.

	This arguments are:

	SDK_LIB1             - A path to the SDK directory with additional libraries (containing the winscard.lib)
	SDK_LIB2             - A path to the SDK directory with additional libraries (containing msvcrt.lib)
	SDK_LIB3             - A path to the WDK directory with additional libraries (only used for release version, containing msvcrt_win2000.obj)
	SDK_LIB4             - A path to the WDK directory with additional libraries (only used for release version, containing msvcrt.lib)

	E.g. nmake -f Makefile.mak GLOBALPLATFORM_INC=..\GlobalPlatform
	GLOBALPLATFORM_LIB=..\GlobalPlatform\Debug
    SDK_LIB1="Microsoft Platform SDK for Windows Server 2003 R2\Lib"
    SDK_LIB2="C:\Program Files\Microsoft Visual Studio 9.0\VC\lib"
    SDK_LIB3="C:\WinDDK\7600.16385.1\lib\win7\i386"
    SDK_LIB4="C:\WinDDK\7600.16385.1\lib\Crt\i386"

4.	(optional)
	Run nmake -f Makefile.mak clean to delete the Debug and Release directories.

b) Optional: Visual Studio solution file
----------------------------------------

You can also use the solution file .sln file for Visual C++ 2008 Express Edition
in the GlobalPlatform project (may also work under the full version) if you prefer
a comfortable IDE or for development needs. When using the solution file then you
have to adjust the C/C++->General->Additional Include Directories,
Linker->General->Additional Library Directories, Linker->Input->Additional
Dependencies and Resources->General->Additional Include Directories fields.

c) Optional: Code::Blocks workspace file
----------------------------------------

Code::Blocks is a free IDE.

http://www.codeblocks.org/downloads/binaries

You can open the .cbp project or the .workspace file of the GlobalPlatform
main project. You must adjust your Compiler, Linker and Resource Compiler
search directories under the Build Options.


Further information
-------------------

For more information visit:

http://sourceforge.net/projects/globalplatform/
