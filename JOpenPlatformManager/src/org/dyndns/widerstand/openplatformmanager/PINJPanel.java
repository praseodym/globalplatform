/*
 * PINJPanel.java
 *
 * Created on 27. Februar 2005, 13:08
 */

package org.dyndns.widerstand.openplatformmanager;

import org.dyndns.widerstand.OpenPlatform.*;
import javax.swing.*;

/**
 *
 * @author  Widerstand
 */
public class PINJPanel extends javax.swing.JPanel {
    
    private MainJFrame parent;
    private SpinnerModel model;
    private SwingUtil swingUtil;
    
    /** Creates new form PINJPanel */
    public PINJPanel(MainJFrame parent) {
        this.parent = parent;
        swingUtil = new SwingUtil();
        Byte value = new Byte((byte)3);
        Byte min = new Byte((byte)3);
        Byte max = new Byte((byte)10);
        Byte step = new Byte((byte)1);
        model = new SpinnerNumberModel(value, min, max, step);
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabelPIN = new javax.swing.JLabel();
        jPasswordFieldPIN = new javax.swing.JPasswordField();
        jCheckBoxPIN = new javax.swing.JCheckBox();
        jSpinnerTryLimit = new javax.swing.JSpinner();
        jLabelTryLimit = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();

        setLayout(new java.awt.BorderLayout());

        setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.TitledBorder("PIN Change / Unblock"), new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 5, 5, 5))));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.TitledBorder("New PIN"), new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 5, 5, 5))));
        jLabelPIN.setText("New PIN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabelPIN, gridBagConstraints);

        jPasswordFieldPIN.setColumns(12);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jPasswordFieldPIN, gridBagConstraints);

        jCheckBoxPIN.setText("Display as Cleartext");
        jCheckBoxPIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxPINActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jCheckBoxPIN, gridBagConstraints);

        jSpinnerTryLimit.setModel(model);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jSpinnerTryLimit, gridBagConstraints);

        jLabelTryLimit.setText("Try Limit");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabelTryLimit, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jPanel2, gridBagConstraints);

        jButton1.setText("Change / Unblock PIN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel3.add(jButton1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jPanel4.setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.TitledBorder("Unblock"), new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 5, 5, 5))));
        jCheckBox1.setText("Unblock");
        jPanel4.add(jCheckBox1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jPanel4, gridBagConstraints);

        jScrollPane1.setViewportView(jPanel1);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        swingUtil.resetJComponentColor();
        byte tryLimit = ((Byte)jSpinnerTryLimit.getValue()).byteValue();
        char PIN[] = jPasswordFieldPIN.getPassword();
        for (char digit : PIN) {
            if (!Character.isDigit(digit)) {
                swingUtil.errorInJComponent(this, jPasswordFieldPIN,
                        "Colored text field cannot be understood as Number", "Wrong Number Format");
                return;
            }
        }
        byte newPIN[] = new byte[PIN.length];
        for (int i=0; i<PIN.length; i++) {
            newPIN[i] = (byte)Character.digit(PIN[i], 10);
        }
        try {
        OPSPWrapper.pinChange(parent.session.cardHandle, parent.session.secInfo,
                parent.session.cardInfo, tryLimit, newPIN, parent.session.kekKey);
        }
        catch (OPSPException e) {
            javax.swing.JOptionPane.showMessageDialog(this, e.getMessage(),
                    "Open Platform Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void jCheckBoxPINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxPINActionPerformed
        if (jCheckBoxPIN.isSelected())
            jPasswordFieldPIN.setEchoChar('\0');
        else
            jPasswordFieldPIN.setEchoChar('*');
    }//GEN-LAST:event_jCheckBoxPINActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBoxPIN;
    private javax.swing.JLabel jLabelPIN;
    private javax.swing.JLabel jLabelTryLimit;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPasswordField jPasswordFieldPIN;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerTryLimit;
    // End of variables declaration//GEN-END:variables
    
}
