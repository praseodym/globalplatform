/*
 * DAPJPanel.java
 *
 * Created on 28. Februar 2005, 10:35
 */

package org.dyndns.widerstand.openplatformmanager;

import javax.swing.*;
import org.dyndns.widerstand.OpenPlatform.*;
import java.io.*;

/**
 *
 * @author  Widerstand
 */
public class DAPJPanel extends javax.swing.JPanel {
    
    private MainJFrame parent;
    private String password = new String();
    private SwingUtil swingUtil;
    
    /** Creates new form DAPJPanel */
    public DAPJPanel(MainJFrame parent) {
        this.parent = parent;
        swingUtil = new SwingUtil();
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabelDAPVerificationKey = new javax.swing.JLabel();
        jPasswordDAPVerificationKey = new javax.swing.JPasswordField();
        jCheckBoxDAPVerificationKey = new javax.swing.JCheckBox();
        jButtonDAPverificationKey = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabelRSAKey = new javax.swing.JLabel();
        jTextFieldRSAKey = new javax.swing.JTextField();
        jButtonLoadRSAKey = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jComboBoxsecurityDomainAID = new javax.swing.JComboBox();
        jLabelsecurityDomainAID = new javax.swing.JLabel();
        jLabelCAPFile = new javax.swing.JLabel();
        jButtonCAPFile = new javax.swing.JButton();
        jTextFieldCAPFile = new javax.swing.JTextField();
        jLabelsecurityDomainAIDAlternative = new javax.swing.JLabel();
        jTextFieldsecurityDomainAID = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.TitledBorder("Calculate DAP"), new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 5, 5, 5))));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.TitledBorder("Load File Data Block DAP using 3DES"), new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 5, 5, 5))));
        jLabelDAPVerificationKey.setLabelFor(jPasswordDAPVerificationKey);
        jLabelDAPVerificationKey.setText("ENC Key");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jLabelDAPVerificationKey, gridBagConstraints);

        jPasswordDAPVerificationKey.setColumns(47);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jPasswordDAPVerificationKey, gridBagConstraints);

        jCheckBoxDAPVerificationKey.setText("Display as Cleartext");
        jCheckBoxDAPVerificationKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDAPVerificationKeyActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jCheckBoxDAPVerificationKey, gridBagConstraints);

        jButtonDAPverificationKey.setText("Load Key");
        jButtonDAPverificationKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDAPVerificationKeyActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jButtonDAPverificationKey, gridBagConstraints);

        jButton1.setText("Calculate DAP");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jPanel4, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.TitledBorder("Load File Data Block DAP using PKCS#1"), new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 5, 5, 5))));
        jLabelRSAKey.setLabelFor(jTextFieldRSAKey);
        jLabelRSAKey.setText("Private RSA Key");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel1.add(jLabelRSAKey, gridBagConstraints);

        jTextFieldRSAKey.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel1.add(jTextFieldRSAKey, gridBagConstraints);

        jButtonLoadRSAKey.setText("Load Key File");
        jButtonLoadRSAKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadRSAKeyActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel1.add(jButtonLoadRSAKey, gridBagConstraints);

        jButton4.setText("Calculate DAP");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jPanel1, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.TitledBorder("Load File Data Block DAP Parameters"), new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 5, 5, 5))));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jComboBoxsecurityDomainAID, gridBagConstraints);

        jLabelsecurityDomainAID.setLabelFor(jComboBoxsecurityDomainAID);
        jLabelsecurityDomainAID.setText("Security Domain AID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jLabelsecurityDomainAID, gridBagConstraints);

        jLabelCAPFile.setLabelFor(jTextFieldCAPFile);
        jLabelCAPFile.setText("CAP or IJC File");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jLabelCAPFile, gridBagConstraints);

        jButtonCAPFile.setText("Select File ...");
        jButtonCAPFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCAPFileActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jButtonCAPFile, gridBagConstraints);

        jTextFieldCAPFile.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jTextFieldCAPFile, gridBagConstraints);

        jLabelsecurityDomainAIDAlternative.setText("Security Domain AID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jLabelsecurityDomainAIDAlternative, gridBagConstraints);

        jTextFieldsecurityDomainAID.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jTextFieldsecurityDomainAID, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jPanel3, gridBagConstraints);

        jScrollPane1.setViewportView(jPanel2);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        swingUtil.resetJComponentColor();
        byte[] securityDomainAID;
        if (jTextFieldsecurityDomainAID.getText().length() > 0) {
            try {
                securityDomainAID = OPSPUtil.bytesFromHexString(jTextFieldsecurityDomainAID.getText());
            } catch (NumberFormatException e) {
                swingUtil.errorInJComponent(this, jTextFieldsecurityDomainAID,
                        "Colored text field cannot be understood as AID", "Wrong Number Format");
                return;
            }
        } else {
            securityDomainAID = OPSPUtil.bytesFromHexString((String)jComboBoxsecurityDomainAID.getSelectedItem());
        }
        String CAPFileName = jTextFieldCAPFile.getText();
        String PEMKeyFileName = jTextFieldRSAKey.getText();
        OPSPDAPBlock dapBlock;
        try {
            dapBlock = OPSPWrapper.calculateRsaDAP(securityDomainAID, CAPFileName, PEMKeyFileName, password);
        } catch (OPSPException e) {
            javax.swing.JOptionPane.showMessageDialog(this, e.getMessage(),
                    "Open Platform Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        final JFileChooser fc = new JFileChooser();
        int ret = fc.showSaveDialog(this);
        if (ret == JFileChooser.APPROVE_OPTION) {
            try {
                File file = fc.getSelectedFile();
                OPSPUtil.saveDAP(file, dapBlock);
            } catch (IOException e) {
                javax.swing.JOptionPane.showMessageDialog(this, e.getMessage(),
                        "I/O Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButtonDAPVerificationKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDAPVerificationKeyActionPerformed
        final JFileChooser fc = new JFileChooser();
        int ret = fc.showOpenDialog(this);
        byte DAPVerificationKey[];
        if (ret == JFileChooser.APPROVE_OPTION) {
            try {
                DAPVerificationKey = OPSPUtil.load3DES(fc.getSelectedFile());
                jPasswordDAPVerificationKey.setText(OPSPUtil.toHexString(DAPVerificationKey));
            } catch (IOException e) {
                swingUtil.errorInJComponent(this, jPasswordDAPVerificationKey,
                        e.getMessage(), "I/O Error");
            }
        }
    }//GEN-LAST:event_jButtonDAPVerificationKeyActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        swingUtil.resetJComponentColor();
        byte[] securityDomainAID;
        if (jTextFieldsecurityDomainAID.getText().length() > 0) {
            try {
                securityDomainAID = OPSPUtil.bytesFromHexString(jTextFieldsecurityDomainAID.getText());
            } catch (NumberFormatException e) {
                swingUtil.errorInJComponent(this, jTextFieldsecurityDomainAID,
                        "Colored text field cannot be understood as AID", "Wrong Number Format");
                return;
            }
        } else {
            securityDomainAID = OPSPUtil.bytesFromHexString((String)jComboBoxsecurityDomainAID.getSelectedItem());
        }
        String CAPFileName = jTextFieldCAPFile.getText();
        byte DAPVerificationKey[] = null;
        try {
            DAPVerificationKey = OPSPUtil.bytesFromHexString(new String(jPasswordDAPVerificationKey.getPassword()));
        } catch (NumberFormatException e) {
            swingUtil.errorInJComponent(this, jPasswordDAPVerificationKey,
                    "Colored text field cannot be understood as Hex String", "Wrong Number Format");
        }
        OPSPDAPBlock dapBlock = null;
        try {
            dapBlock = OPSPWrapper.calculate3desDAP(securityDomainAID, CAPFileName, DAPVerificationKey);
        } catch (OPSPException e) {
            javax.swing.JOptionPane.showMessageDialog(this, e.getMessage(),
                    "Open Platform Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        final JFileChooser fc = new JFileChooser();
        int ret = fc.showSaveDialog(this);
        if (ret == JFileChooser.APPROVE_OPTION) {
            try {
                File file = fc.getSelectedFile();
                OPSPUtil.saveDAP(file, dapBlock);
            } catch (IOException e) {
                javax.swing.JOptionPane.showMessageDialog(this, e.getMessage(),
                        "I/O Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
        
    private void jButtonLoadRSAKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadRSAKeyActionPerformed
        final JFileChooser fc = new JFileChooser();
        int ret = fc.showOpenDialog(this);
        if (ret == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            jTextFieldRSAKey.setText(file.getAbsolutePath());
            password = PasswordJDialog.showDialog(parent);
        } else {
            password = new String();
        }
    }//GEN-LAST:event_jButtonLoadRSAKeyActionPerformed
    
    private void jButtonCAPFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCAPFileActionPerformed
        final JFileChooser fc = new JFileChooser();
        int ret = fc.showOpenDialog(this);
        if (ret == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            jTextFieldCAPFile.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_jButtonCAPFileActionPerformed
    
    public void refresh() {
        jComboBoxsecurityDomainAID.removeAllItems();
        for (OPSPApplicationData appData : parent.session.cardManager) {
            jComboBoxsecurityDomainAID.addItem(OPSPUtil.toHexString(appData.getAID()));
        }
        for (OPSPApplicationData appData : parent.session.securityDomains) {
            jComboBoxsecurityDomainAID.addItem(OPSPUtil.toHexString(appData.getAID()));
        }
    }
    
    private void jCheckBoxDAPVerificationKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDAPVerificationKeyActionPerformed
        if (jCheckBoxDAPVerificationKey.isSelected())
            jPasswordDAPVerificationKey.setEchoChar('\0');
        else
            jPasswordDAPVerificationKey.setEchoChar('*');
    }//GEN-LAST:event_jCheckBoxDAPVerificationKeyActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonCAPFile;
    private javax.swing.JButton jButtonDAPverificationKey;
    private javax.swing.JButton jButtonLoadRSAKey;
    private javax.swing.JCheckBox jCheckBoxDAPVerificationKey;
    private javax.swing.JComboBox jComboBoxsecurityDomainAID;
    private javax.swing.JLabel jLabelCAPFile;
    private javax.swing.JLabel jLabelDAPVerificationKey;
    private javax.swing.JLabel jLabelRSAKey;
    private javax.swing.JLabel jLabelsecurityDomainAID;
    private javax.swing.JLabel jLabelsecurityDomainAIDAlternative;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPasswordField jPasswordDAPVerificationKey;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldCAPFile;
    private javax.swing.JTextField jTextFieldRSAKey;
    private javax.swing.JTextField jTextFieldsecurityDomainAID;
    // End of variables declaration//GEN-END:variables
    
}
